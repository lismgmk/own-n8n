version: '3.8'

volumes:
  db_storage:
  n8n_storage:
  my_db_storage:
  grafana-storage: {}

services:
  postgres:
    image: postgres:11
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - '5432:5432'
    networks:
      - common_network

  my_postgres:
    image: postgres:11
    restart: always
    container_name: my_postgres
    environment:
      - POSTGRES_USER=my_user
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=my_database
    volumes:
      - my_db_storage:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - common_network

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./store:/home/node
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - common_network
  grafana:
    image: grafana/grafana:latest
    # image: grafana/grafana:8.4.5
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    networks:
      - common_network
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=12345678

networks:
  common_network: